= ChangeLog
==== r92 (blambeau)
* Fixes a lot of bugs in IntelligentBuffer, which is not so intelligent so far.
* Fixes a lot of instanciates -> instantiates
* Adds tests inspired from anagram needs. 

==== r91 (blambeau)
* First implem of IntelligentBuffer with supporting test.

==== r90 (blambeau)
* Refactors whole files to adopt much strict ruby code conventions.

==== r89 (blambeau)
* Attribute readers for context and buffer in parser.

==== r87 (blambeau)
* Documents the recursive_application tag. 

==== r86 (blambeau)
* New utilities for rule implementation (those allowing as, with and using expressions).
* Big deprecated API in RuleSet::Utils, please use expr(...).decode(str, parser) instead.
* Recursive application %!{...} (aka modulo-bang) is written and basically tested.
* The specification builds the examples herself (wlang really allows metaprogramming now)

==== r85 (blambeau)
* wlang
* Tries to implement a recursive_application rule, harder that at first glance.
* Continues documenting wlang.

==== r75 (blambeau)
* wlang
* input_inclusion 'with ' is optional.
* Fixes a bug with input_inclusion when included template uses the same tag. 
* Adds a test for input_inclusion and underlying regexp.
* Specification continued.

==== r74 (blambeau)
* Fixes #63, removes ACCENTS arrayuntil further investivation about ruby1.9

==== r73 (blambeau)
* Provides two new tags in the Buffering ruleset.
* Implements a WITH expression in ruleset_utils.
* Implements recognition of data files.
* Splits specification in multiple files and continues documentation.

==== r72 (blambeau)
* Specification continued.

==== r71 (blambeau)
* Specification continued.

==== r70 (blambeau)
* Provides a rdoc/nop encoder.
* Fixes a bug in parser.
* Completes the specification.

==== r69 (blambeau)
* Forces only test under test/ folder to be executed by rake.

==== r68 (blambeau)
* All tests refactored to require 'test/unit/testcase' instead of 'test/unit'. Tests do not automatically ran when including the files!
* Fixes a bug in *{...} when iterated collection is empty.
* Provides a 'report-centric test' example.
* Implements camel-case encoder in plain-text dialect.

==== r67 (blambeau)
* Fixes an error in the specification.

==== r66 (blambeau)
* Completes Context ruleset.
* Replaces modulo-assignment variant by a block-assignment rule #{...}
* Fixes an example bug.

==== r65 (blambeau)
* Provides implementation as well as specification of two rules in Context ruleset
* RuleSet::Utils module started in order to have some reusable regular expressions.

==== r64 (llambeau)
* Moves basic example inside his own folder

==== r63 (llambeau)
* #58 : removes debug code in ParseError

==== r62 (llambeau)
* ParserError now contains informations about the line/column location of the error

==== r61 (llambeau)
* Issue #60 :
* Fixes a warning about removal of :object_id method (only with ruby1.9)

==== r60 (blambeau)
* Adds wlang/uri dialect, which is the same as active-string for now.
* Adds the >>{wlang/uri} in Buffering ruleset.
* Buffering ruleset cleanly tested.
* WLang::TestUtils for easier test creation.
* SVN ignores pkg folder. 

==== r59 (llambeau)
* Add the original exception message in the information message

==== r58 (llambeau)
* Adds begin/rescue/end blocks to handle 'require' failures
* Prints a user-friendly message to the stderr with missing-gem informations 
* Ex:
* = Error in dialect 'xhtml/coderay'
* = This dialect depends on gem or file 'coderay' (try: 'gem install coderay')

==== r57 (llambeau)
* Fixes the gem building to include spec, doc, templates documents

==== r56 (llambeau)
* + Merges the Rakefile and gem-specification, use 'rake package' now to build
*   the gem.
* Remark: I can't produce the gem automatically, i don't know why... I
* investigate

==== r52 (llambeau)
* + Adds gems specification for wlang.

==== r51 (blambeau)
* wlang, fixes a stupid bug in ruby dialect test.

==== r45 (blambeau)
* Adds some tests on the wlang/ruby dialect

==== r38 (blambeau)
* Fixes a bug in CHANGELOG generation.

==== r37 (blambeau)
* Documentation/Specification much improved.
* Specification now contains examples.
* Provides a test that check that any example in the specification is correct.
* Provides basic sql and sql/sybase dialects.

==== r35 (blambeau)
* Simple change in the specification YAML file as well as the template, which is much more user friendly now.

==== r34 (blambeau)
* Adds killer example (the way specification is generated) link in README.
* Experimental support of ${something/with/sub/keys} as we had in w@w.

==== r33 (blambeau)
* A simple 'cl' task that generates a CHANGELOG form the SVN.
* Using it: rake cl && rake rerdoc

==== r31 (blambeau)
* Adds Encoder class to void symetry problems between rules and encoders.
* Encoders renamed as EncoderSet, to be symetric with RuleSet.
* Documentation much improved.
* WLang specification automatically generated in Rakefile using ... wlang itself ;-)

==== r30 (blambeau)
* [revprop] Refactoring of ruby source files, to get simpler project structure to code.

==== r26 (blambeau)
* SQLMe and RMatch moved in sandbox as not being mature projects.
* Database example in wlang removed (because using sqlme which is not mature)

==== r22 (blambeau)
* Proof of concept: iterating database records. 

==== r20 (blambeau)
* Adds a context ruleset with a first implementation of .={...}

==== r19 (blambeau)
* Adds rdoc encoder with a wikirdoc sample.
* Implements xhtml/entities-encoding using CGI::escapeHTML
* Dialect modules/files refactored to be more syntax friendly.

==== r18 (blambeau)
* String extensions moved inside ruby_extensions.rb
* Documentation much improved.
* README and CHANGELOG adapted.

==== r17 (blambeau)
* CodeRay example slighlty modified.

==== r16 (blambeau)
* Imperative and Buffering rulesets started.
* CodeRay dialect created.
* Examples slightly extended.
* Template has the ability to know its source file and to resolve basic URIs.

==== r15 (blambeau)
* Provides lazy load of dialects (need to provide a require_gem and require_file instead of Ruby's require)
* Provides wlang commandline tool with basic options
* examples directory started.
* wlang/xhtml dialect started.

==== r13 (blambeau)
* Introduces a Template abstraction which encapsulates references to dialect and context.
* Template is also "block_symbols" aware and RuleSet.pattern takes that
* argument, allowing ${} as well as $() and $[] syntax (only one syntax allowed
* for a given template).

==== r12 (blambeau)
* Continues issue #49 inside wlang itself (removes revzero main folder)

==== r11 (blambeau)
* Resolves issue #49.
* Only sandbox is left on repository root, llambeau will be asked to switch it to a better location.

==== r10 (blambeau)
* Implements EncodingRuleSet from wlang_semantics document (see issue #46)
* Adds relative encoder usage in Parser#encode
* Provides Ruby dialect base implementation.
* Provides StandardDialects file/class.

==== r9 (blambeau)
* ParserState becomes Parser, which is stateful.
* Encoders vs. Rules difference implemented according to wlang semantics (see issue #46)
* Follows the wlang semantics of issue #46, not complete however.
* Provides a basic parser context for evaluations.
* Homework (issue) #32 is closed by this revision.

==== r8 (blambeau)
* Provides a basic test on the WLang::Parser. See Home Work 2009/01 on redmine.

==== r7 (blambeau)
* Documentation improved, GPL/Ruby licence added.

==== r6 (blambeau)
* Documentation and API improved.
* Horo template and Rakefile slightly modified.

==== r3 (blambeau)
* Ignores eclipse files and generated documentation.

==== r2 (blambeau)
* Initial revision of RevZero tools.
* This revision contains a first wlang implementation, not rigourously tested so
* far.

==== r1 (blambeau)
* Initial repository layout.
